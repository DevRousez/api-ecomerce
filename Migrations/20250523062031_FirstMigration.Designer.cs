// <auto-generated />
using System;
using Api_comerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api_comerce.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250523062031_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api_comerce.Models.Accounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Api_comerce.Models.AccountsTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AccountsTypes");
                });

            modelBuilder.Entity("Api_comerce.Models.Empaques", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CODIGO_EMPAQUE")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double?>("CONTENIDO")
                        .HasColumnType("float");

                    b.Property<string>("EMPAQUE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FECHA_CREADO")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("SINCRONIZADO")
                        .HasColumnType("bit");

                    b.Property<int?>("UNIDAD_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UNIDAD_ID");

                    b.ToTable("EMPAQUES");
                });

            modelBuilder.Entity("Api_comerce.Models.Lineas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FECHA_CREADO")
                        .HasColumnType("datetime2");

                    b.Property<string>("LINEA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("LINEAS");
                });

            modelBuilder.Entity("Api_comerce.Models.MarcaProductos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FECHA_CREADO")
                        .HasColumnType("datetime2");

                    b.Property<string>("MARCA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MARCAS_PRODUCTO");
                });

            modelBuilder.Entity("Api_comerce.Models.ProductoSat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaveProd")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CLAVE_PROD");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<DateTime?>("FechaCreado")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_CREADO");

                    b.HasKey("Id");

                    b.ToTable("PRODUCTOS_SAT");
                });

            modelBuilder.Entity("Api_comerce.Models.Productos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Acumulador")
                        .HasColumnType("bit")
                        .HasColumnName("ACUMULADOR");

                    b.Property<int?>("LineaId")
                        .HasColumnType("int")
                        .HasColumnName("LINEA_ID");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("int")
                        .HasColumnName("MARCA_ID");

                    b.Property<string>("NombreProducto")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("PRODUCTO");

                    b.Property<string>("Prefijo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PREFIJO");

                    b.Property<int?>("ProductoIdAcumulador")
                        .HasColumnType("int")
                        .HasColumnName("PRODUCTO_ID_ACUMULADOR");

                    b.Property<int?>("ProductoSatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LineaId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ProductoSatId");

                    b.ToTable("PRODUCTOS");
                });

            modelBuilder.Entity("Api_comerce.Models.ProductosEmpaque", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("PRODUCTO_ID");

                    b.Property<int>("EmpaqueId")
                        .HasColumnType("int")
                        .HasColumnName("EMPAQUE_ID");

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVO");

                    b.Property<string>("Codigo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CODIGO");

                    b.Property<double?>("Descuento")
                        .HasColumnType("float")
                        .HasColumnName("DESCUENTO");

                    b.Property<decimal?>("PCompra")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PCOMPRA");

                    b.Property<decimal?>("PVenta")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PVENTA");

                    b.HasKey("ProductoId", "EmpaqueId");

                    b.HasIndex("EmpaqueId");

                    b.ToTable("PRODUCTO_EMPAQUE");
                });

            modelBuilder.Entity("Api_comerce.Models.UnidadSAT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CLAVE_UNIDAD")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("FECHA_CREADO")
                        .HasColumnType("datetime2");

                    b.Property<string>("UNIDAD_SAT")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("UNIDADES_SAT");
                });

            modelBuilder.Entity("Api_comerce.Models.Accounts", b =>
                {
                    b.HasOne("Api_comerce.Models.AccountsTypes", "AccountsTypes")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountsTypes");
                });

            modelBuilder.Entity("Api_comerce.Models.Empaques", b =>
                {
                    b.HasOne("Api_comerce.Models.UnidadSAT", "UnidadSAT")
                        .WithMany()
                        .HasForeignKey("UNIDAD_ID");

                    b.Navigation("UnidadSAT");
                });

            modelBuilder.Entity("Api_comerce.Models.Productos", b =>
                {
                    b.HasOne("Api_comerce.Models.Lineas", "Linea")
                        .WithMany()
                        .HasForeignKey("LineaId");

                    b.HasOne("Api_comerce.Models.MarcaProductos", "MarcaProducto")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.HasOne("Api_comerce.Models.ProductoSat", "ProductoSat")
                        .WithMany()
                        .HasForeignKey("ProductoSatId");

                    b.Navigation("Linea");

                    b.Navigation("MarcaProducto");

                    b.Navigation("ProductoSat");
                });

            modelBuilder.Entity("Api_comerce.Models.ProductosEmpaque", b =>
                {
                    b.HasOne("Api_comerce.Models.Empaques", "Empaque")
                        .WithMany()
                        .HasForeignKey("EmpaqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_comerce.Models.Productos", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empaque");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Api_comerce.Models.AccountsTypes", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
